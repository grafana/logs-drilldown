name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
env:
  BUNDLEWATCH_GITHUB_TOKEN: ${{secrets.BUNDLEWATCH_GITHUB_TOKEN}}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      plugin-id: ${{ steps.metadata.outputs.plugin-id }}
      plugin-version: ${{ steps.metadata.outputs.plugin-version }}
      has-e2e: ${{ steps.check-for-e2e.outputs.has-e2e }}
      has-backend: ${{ steps.check-for-backend.outputs.has-backend }}
    env:
      GRAFANA_ACCESS_POLICY_TOKEN: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Node.js environment
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Restore npm cache
        id: restore-npm-cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/yarn.lock', '!node_modules/**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Save npm cache
        id: save-npm-cache
        if: steps.restore-npm-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            node_modules
          key: ${{ steps.restore-npm-cache.outputs.cache-primary-key }}

      - name: Check types
        run: yarn typecheck
      - name: Lint
        run: yarn lint
      - name: Unit tests
        run: yarn test:ci
      - name: Build frontend
        run: yarn build
      - name: Check bundlesize
        run: yarn run bundlewatch
      - name: Start grafana docker
        run: yarn server:ci
      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps
      - name: Wait for docker
        run: sleep 60
      - name: Run e2e tests
        id: run-tests
        run: yarn e2e:flake:ci
      - name: Upload Playwright artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ (always() && steps.run-tests.outcome == 'success') || (failure() && steps.run-tests.outcome == 'failure') }}
        with:
          name: playwright-report-${{github.run_id}}
          path: playwright-report/
          retention-days: 5
      - name: Capture Docker logs
        id: capture-docker-logs
        if: ${{ (always() && steps.run-tests.outcome == 'success') || (failure() && steps.run-tests.outcome == 'failure') }}
        run: docker compose -f docker-compose.dev.yaml logs > docker-compose-logs.txt
      - name: Upload Docker logs
        if: ${{ always() && steps.capture-docker-logs.outcome == 'success' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: docker-logs-${{github.run_id}}
          path: docker-compose-logs.txt
          retention-days: 5
      - name: Stop grafana docker
        run: docker compose down

      - name: Check for backend
        id: check-for-backend
        run: |
          if [ -f "Magefile.go" ]
          then
            echo "has-backend=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Go environment
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: '1.21'

      - name: Test backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@6f50bbb8ea47d56e62dee92392788acbc8192d0b # v3.1.0
        with:
          version: latest
          args: coverage

      - name: Build backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@6f50bbb8ea47d56e62dee92392788acbc8192d0b # v3.1.0
        with:
          version: latest
          args: buildAll

      - name: Sign plugin
        run: yarn sign
        if: ${{ env.GRAFANA_ACCESS_POLICY_TOKEN != '' }}

      - name: Get plugin metadata
        id: metadata
        run: |
          sudo apt-get install jq

          export GRAFANA_PLUGIN_ID=$(cat dist/plugin.json | jq -r .id)
          export GRAFANA_PLUGIN_VERSION=$(cat dist/plugin.json | jq -r .info.version)
          export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-${GRAFANA_PLUGIN_VERSION}.zip

          echo "plugin-id=${GRAFANA_PLUGIN_ID}" >> $GITHUB_OUTPUT
          echo "plugin-version=${GRAFANA_PLUGIN_VERSION}" >> $GITHUB_OUTPUT
          echo "archive=${GRAFANA_PLUGIN_ARTIFACT}" >> $GITHUB_OUTPUT

      - name: Package plugin
        id: package-plugin
        env:
          PLUGIN_ID: ${{ steps.metadata.outputs.plugin-id }}
          PLUGIN_ARCHIVE: ${{ steps.metadata.outputs.archive }}
        run: |
          mv "dist" "$PLUGIN_ID"
          zip "$PLUGIN_ARCHIVE" "$PLUGIN_ID" -r

      - name: Archive Build
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ steps.metadata.outputs.plugin-id }}-${{ steps.metadata.outputs.plugin-version }}
          path: ${{ steps.metadata.outputs.plugin-id }}
          retention-days: 5
