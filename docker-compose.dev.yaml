services:
  grafana:
    extends:
      file: .config/docker-compose-base.yaml
      service: grafana
    container_name: 'grafana-logsapp'
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall lokiLogsDataplane
      - GF_PLUGINS_PREINSTALL_DISABLED=true
      - GF_SERVER_ROOT_URL=http://localhost:3001/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    build:
      context: ./.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana}
    ports: !override
      - 3001:3000/tcp
    volumes:
      - ./dist:/var/lib/grafana/plugins/grafana-logsapp
      - ./provisioning:/etc/grafana/provisioning
    extra_hosts:
      # This allows us to connect to other services running on the host machine.
      # 172.17.0.1 is the default Docker bridge network gateway IP address
      # Using "host-gateway" would be more portable across different Docker setups but fails in our CI build
      - 'host.docker.internal:172.17.0.1'
  loki:
    image: grafana/loki:k263-d446d47
    environment:
      LOG_CLUSTER_DEPTH: '8'
      LOG_SIM_TH: '0.3'
    ports:
      - '3100:3100'
    volumes:
      - ./config/loki-config.yaml:/etc/loki/local-config.yaml
      - ./config/loki-overrides.yaml:/etc/loki/overrides.yaml
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -runtime-config.file=/etc/loki/overrides.yaml
    restart: on-failure
  generator:
    build:
      context: ./generator
    command: -url http://loki:3100/loki/api/v1/push -tenant-id=1
    environment:
      - OTLP_ENDPOINT=http://loki:3100/otlp
